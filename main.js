/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var f=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var T=Object.getOwnPropertyNames;var R=Object.prototype.hasOwnProperty;var A=(p,c)=>{for(var e in c)f(p,e,{get:c[e],enumerable:!0})},b=(p,c,e,i)=>{if(c&&typeof c=="object"||typeof c=="function")for(let t of T(c))!R.call(p,t)&&t!==e&&f(p,t,{get:()=>c[t],enumerable:!(i=S(c,t))||i.enumerable});return p};var I=p=>b(f({},"__esModule",{value:!0}),p);var x={};A(x,{default:()=>h});module.exports=I(x);var s=require("obsidian"),v={openaiApiKey:"",enableTranscription:!1},m=class{constructor(){this.isRecording=!1;this.mediaRecorder=null;this.stream=null;this.audioChunks=[];this.startTime=0;this.mimeType="audio/webm"}},y=class extends s.PluginSettingTab{constructor(e,i){super(e,i);this.plugin=i}display(){let{containerEl:e}=this;e.empty(),e.createEl("h2",{text:"VoiceNotes Settings"}),new s.Setting(e).setName("OpenAI API Key").setDesc("Enter your OpenAI API Key").addText(i=>i.setPlaceholder("sk-...").setValue(this.plugin.settings.openaiApiKey).onChange(async t=>{this.plugin.settings.openaiApiKey=t,await this.plugin.saveSettings()})),new s.Setting(e).setName("Enable Voice Transcription").setDesc("When enabled, will use OpenAI Whisper API to automatically transcribe audio content").addToggle(i=>i.setValue(this.plugin.settings.enableTranscription).onChange(async t=>{this.plugin.settings.enableTranscription=t,await this.plugin.saveSettings()}))}},h=class extends s.Plugin{constructor(){super(...arguments);this.recordingState=new m;this.statusBarItem=null}async onload(){await this.loadSettings(),this.statusBarItem=this.addStatusBarItem(),this.statusBarItem.setText("\u{1F3A4} VoiceNotes"),this.statusBarItem.style.cursor="pointer",this.statusBarItem.addEventListener("click",()=>{this.toggleRecording()}),this.addRibbonIcon("microphone","VoiceNotes: Recording",()=>{this.toggleRecording()}),this.addCommand({id:"toggle-recording",name:"Start/Stop Recording",callback:()=>{this.toggleRecording()}}),this.addSettingTab(new y(this.app,this))}onunload(){this.recordingState.isRecording&&this.stopRecording()}async loadSettings(){this.settings=Object.assign({},v,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}toggleRecording(){this.recordingState.isRecording?this.stopRecording():this.startRecording()}async startRecording(){if(this.recordingState.isRecording){new s.Notice("Already recording...");return}try{let e=await navigator.mediaDevices.getUserMedia({audio:{echoCancellation:!1,noiseSuppression:!1,autoGainControl:!1,sampleRate:44100,channelCount:1}}),i=[{mimeType:"audio/webm;codecs=opus",ext:".webm"},{mimeType:"audio/webm",ext:".webm"},{mimeType:"audio/mpeg",ext:".mp3"},{mimeType:"audio/wav",ext:".wav"},{mimeType:"audio/ogg;codecs=opus",ext:".ogg"}],t={mimeType:"audio/webm",ext:".webm"};for(let o of i)if(MediaRecorder.isTypeSupported(o.mimeType)){t=o;break}this.recordingState=new m,this.recordingState.isRecording=!0,this.recordingState.startTime=Date.now(),this.recordingState.stream=e,this.recordingState.mimeType=t.mimeType,this.recordingState.mediaRecorder=new MediaRecorder(e,{mimeType:t.mimeType,audioBitsPerSecond:64e3}),this.recordingState.mediaRecorder.ondataavailable=o=>{o.data&&o.data.size>0&&this.recordingState.audioChunks.push(o.data)},this.recordingState.mediaRecorder.onstop=()=>{this.processRecording()},this.recordingState.mediaRecorder.start(1e3),this.updateStatusBar(),new s.Notice("\u{1F534} Recording started...")}catch(e){console.error("Failed to start recording:",e),new s.Notice(`Cannot access microphone: ${e.message}`)}}stopRecording(){var e;this.recordingState.isRecording&&(this.recordingState.isRecording=!1,this.recordingState.mediaRecorder&&this.recordingState.mediaRecorder.stop(),this.recordingState.stream&&this.recordingState.stream.getTracks().forEach(i=>i.stop()),(e=this.statusBarItem)==null||e.setText("\u{1F3A4} VoiceNotes"),new s.Notice("\u{1F6D1} Recording stopped"))}async processRecording(){if(this.recordingState.audioChunks.length===0){new s.Notice("\u274C Recording data is empty");return}let e=new Blob(this.recordingState.audioChunks,{type:this.recordingState.mimeType}),i=await this.saveAudioFile(e);if(i&&this.insertTextToEditor(`### Voice Note
${i}

`),this.settings.enableTranscription&&this.settings.openaiApiKey){new s.Notice("\u{1F504} Transcribing...");try{let t=await this.transcribeAudio(e);t&&(this.insertTextToEditor(`**Transcription:**
${t}

`),new s.Notice("\u2705 Transcription completed"))}catch(t){console.error("Transcription failed:",t),new s.Notice(`\u274C Transcription failed: ${t.message}`)}}this.recordingState.audioChunks=[]}async saveAudioFile(e){var i;try{let t=".webm";e.type.includes("webm")?t=".webm":e.type.includes("mp3")||e.type.includes("mpeg")?t=".mp3":e.type.includes("wav")?t=".wav":e.type.includes("ogg")&&(t=".ogg");let d=`voice-note-${new Date().toISOString().replace(/[:.]/g,"-")}${t}`,n="",r=this.app.workspace.getActiveFile();r&&(n=((i=r.parent)==null?void 0:i.path)||"");let l=n?`${n}/${d}`:d,u=await e.arrayBuffer();return await this.app.vault.createBinary(l,u),`![${d}](${l})`}catch(t){return console.error("Failed to save audio file:",t),new s.Notice(`\u274C Failed to save audio file: ${t.message}`),null}}async transcribeAudio(e){if(!this.settings.openaiApiKey)throw new Error("OpenAI API Key not configured");let i="----formdata-obsidian-"+Math.random().toString(36),t="audio.webm";e.type.includes("webm")?t="audio.webm":e.type.includes("mp3")||e.type.includes("mpeg")?t="audio.mp3":e.type.includes("wav")?t="audio.wav":e.type.includes("ogg")&&(t="audio.ogg");let o=await e.arrayBuffer(),d=new Uint8Array(o),n=new TextEncoder,r=[];r.push(n.encode(`--${i}\r
`)),r.push(n.encode(`Content-Disposition: form-data; name="file"; filename="${t}"\r
`)),r.push(n.encode(`Content-Type: ${e.type}\r
\r
`)),r.push(d),r.push(n.encode(`\r
`)),r.push(n.encode(`--${i}\r
`)),r.push(n.encode(`Content-Disposition: form-data; name="model"\r
\r
`)),r.push(n.encode(`whisper-1\r
`)),r.push(n.encode(`--${i}\r
`)),r.push(n.encode(`Content-Disposition: form-data; name="language"\r
\r
`)),r.push(n.encode(`zh\r
`)),r.push(n.encode(`--${i}--\r
`));let l=r.reduce((a,g)=>a+g.length,0),u=new Uint8Array(l),w=0;for(let a of r)u.set(a,w),w+=a.length;try{let a=await(0,s.requestUrl)({url:"https://api.openai.com/v1/audio/transcriptions",method:"POST",headers:{Authorization:`Bearer ${this.settings.openaiApiKey}`,"Content-Type":`multipart/form-data; boundary=${i}`},body:u.buffer});if(a.json&&a.json.text)return a.json.text.trim();throw new Error("Invalid transcription result format")}catch(a){console.error("OpenAI API error:",a);let g="Transcription failed";throw a.status===401?g="Invalid API Key or unauthorized":a.status===429?g="API request rate limit exceeded, please try again later":a.status===403?g="API access denied, please check API Key permissions":a.message&&(g=a.message),new Error(g)}}insertTextToEditor(e){if(!e||e.trim()==="")return;let i=this.app.workspace.activeLeaf;if(!i){new s.Notice("\u274C No active note page");return}let t=i.view;if(t.getViewType()!=="markdown"){new s.Notice("\u274C Current page is not a Markdown note");return}let o=t.editor;if(!o){new s.Notice("\u274C Cannot find editor");return}try{let d=o.getCursor(),n=e.trim()+`
`;o.replaceRange(n,d),o.setCursor(d.line+n.split(`
`).length-1,0)}catch(d){console.error("Failed to insert text:",d),new s.Notice(`\u274C Failed to insert text: ${d.message}`)}}updateStatusBar(){if(this.statusBarItem)if(this.recordingState.isRecording){let e=Math.floor((Date.now()-this.recordingState.startTime)/1e3);this.statusBarItem.setText(`\u{1F534} Recording ${e}s`),setTimeout(()=>{this.recordingState.isRecording&&this.updateStatusBar()},1e3)}else this.statusBarItem.setText("\u{1F3A4} VoiceNotes")}};
